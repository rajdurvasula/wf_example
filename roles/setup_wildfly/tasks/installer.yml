---
#
# Tasks to obtain Wildfly installer
#

- name: Check if wildfly home exists
  stat:
    path: "{{ wf.user_home }}"
  register: wf_user_home_status

- name: Remove old wildfly directory and files
  block:
    - name: Check wildfly system spec exists
      stat:
        path: "/etc/systemd/system/{{ wf.service }}.service"
      register: wf_service_status

    - name: Stop wildfly service
      systemd:
        name: "{{ wf.service }}"
        state: stopped
      when:
        - wf_service_status.stat.exists

    - name: Remove wildfly files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/etc/systemd/system/{{ wf.service }}.service"
        - "{{ wf.conf_dir }}"
        - "{{ wf.user_home }}"

- name: Download Wildfly {{wf.version}} installer binary
  get_url:
    url: "{{ wf.installer_url }}"
    dest: "{{ wf.install_dir }}"

- name: Extract Wildfly installer binary
  block:
    - name: Extract binary
      unarchive:
        src: "{{ wf.install_dir }}/{{ wf.installer_url | basename }}"
        dest: "{{ wf.install_dir }}"
        remote_src: yes
    - name: Remove installer binary
      file:
        path: "{{ wf.install_dir }}/{{ wf.installer_url | basename }}"
        state: absent
        force: yes
    - name: Move wildfly home
      command: mv "{{ tmp_home_dir }}" "{{ wf.user_home }}"
